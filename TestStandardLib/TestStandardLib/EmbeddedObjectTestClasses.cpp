#include "EmbeddedObjectTestClasses.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CEmbeddedTest::Class(void)
{
	Pointer(mpTest.This());
}

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
Ptr<CEmbeddedTest> CEmbeddedTest::Init(void)
{
	Pointer(mpTest.This());
	
	miAmANumber = 85;
	mfSoAmI = 58.0f;

	return Ptr<CEmbeddedTest>(this);
}

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CEmbeddedTest::KillData(void)
{
	miAmANumber = 0;
	mfSoAmI = 0.0f;
}

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CEmbeddedTest::Save(CObjectSerialiser* pcFile)
{
	pcFile->WriteInt(miAmANumber);
	pcFile->WriteFloat(mfSoAmI);
	pcFile->WritePointer(mpTest);

	return TRUE;
}

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CEmbeddedTest::Load(CObjectDeserialiser* pcFile)
{
	Class();

	pcFile->ReadInt(&miAmANumber);
	pcFile->ReadFloat(&mfSoAmI);
	pcFile->ReadPointer(mpTest.This());
	
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CEmbeddedContainer::Class(void)
{
	Pointer(mpTest.This());
	Embedded(&mcOne);
	Embedded(&mcTwo);
}

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
Ptr<CEmbeddedContainer> CEmbeddedContainer::Init(void)
{
	Class();

	strcpy(msz, "And");
	mcOne.Init();
	mi = 73;
	mcTwo.Init();
	mf = 666.0f;

	return Ptr<CEmbeddedContainer>(this);
}

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CEmbeddedContainer::KillData(void)
{
	msz[0] = msz[1] = msz[2] = msz[3] = 0;
	mcOne.Kill();
	mi = 0;
	mcTwo.Kill();
	mf = 0.0f;
}

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CEmbeddedContainer::Save(CObjectSerialiser* pcFile)
{
	pcFile->WriteData(msz, 4);
	mcOne.Save(pcFile);
	pcFile->WriteInt(mi);
	mcTwo.Save(pcFile);
	pcFile->WriteFloat(mf);
	pcFile->WritePointer(mpTest);

	return TRUE;
}

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CEmbeddedContainer::Load(CObjectDeserialiser* pcFile)
{
	Class();

	pcFile->ReadData(msz, 4);
	mcOne.Load(pcFile);
	pcFile->ReadInt(&mi);
	mcTwo.Load(pcFile);
	pcFile->ReadFloat(&mf);
	pcFile->ReadPointer(mpTest.This());

	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CEmbeddedComplex::Class(void)
{
	Pointer(mpTest.This());
	Embedded(&mcSimple);
	Embedded(&ma);
	Embedded(&mcContainer);
}

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
Ptr<CEmbeddedComplex> CEmbeddedComplex::Init(void)
{
	Class();

	mcSimple.Init();
	mai[0] = 1;
	mai[1] = 2;
	ma.Init();
	mcContainer.Init();

	return Ptr<CEmbeddedComplex>(this);
}

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CEmbeddedComplex::KillData(void)
{
	mcSimple.Kill();
	mai[0] = 0;
	mai[1] = 0;
	ma.Kill();
	mcContainer.Kill();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CEmbeddedComplex::Save(CObjectSerialiser* pcFile)
{
	mcSimple.Save(pcFile);
	pcFile->WriteInt(mai[0]);
	pcFile->WriteInt(mai[1]);
	ma.Save(pcFile);
	mcContainer.Save(pcFile);
	pcFile->WritePointer(mpTest);

	return TRUE;
}

//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CEmbeddedComplex::Load(CObjectDeserialiser* pcFile)
{
	Class();

	mcSimple.Load(pcFile);
	pcFile->ReadInt(&mai[0]);
	pcFile->ReadInt(&mai[1]);
	ma.Load(pcFile);
	mcContainer.Load(pcFile);
	pcFile->ReadPointer(mpTest.This());

	return TRUE;
}

