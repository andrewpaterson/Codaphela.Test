#include "StandardLib/ObjectSerialiser.h"
#include "StandardLib/ObjectDeserialiser.h"
#include "NamedObjectTestClasses.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
Ptr<CTestNamedObject> CTestNamedObject::Init(int iNum)
{
	PreInit();
	miNum = iNum;

	PostInit();
	return this;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestNamedObject::Class(void)
{
	CObject::Class();
	Pointer(mpNamedTest1.This());
	Pointer(mpNamedTest2.This());
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestNamedObject::Free(void)
{
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestNamedObject::Save(CObjectSerialiser* pcFile)
{
	ReturnOnFalse(pcFile->WritePointer(mpNamedTest1));
	ReturnOnFalse(pcFile->WritePointer(mpNamedTest2));
	ReturnOnFalse(pcFile->WriteInt(miNum));
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestNamedObject::Load(CObjectDeserialiser* pcFile)
{
	ReturnOnFalse(pcFile->ReadPointer(mpNamedTest1.This()));
	ReturnOnFalse(pcFile->ReadPointer(mpNamedTest2.This()));
	ReturnOnFalse(pcFile->ReadInt(&miNum));
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
Ptr<CTestNamedObjectSmall> CTestNamedObjectSmall::Init(char* sz)
{
	PreInit();

	memset(mac, 0, 4);
	StrCpySafe(mac, sz, 4);

	PostInit();
	return this;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestNamedObjectSmall::Class(void)
{
	CObject::Class();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestNamedObjectSmall::Free(void)
{
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestNamedObjectSmall::Save(CObjectSerialiser* pcFile)
{
	ReturnOnFalse(pcFile->WriteData(mac, 4));
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestNamedObjectSmall::Load(CObjectDeserialiser* pcFile)
{
	ReturnOnFalse(pcFile->ReadData(mac, 4));
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
Ptr<CTestNamedObjectWithEmbedded> CTestNamedObjectWithEmbedded::Init(int iX, int iY, int iName1, int iName2, CPointer pObject, Ptr<CTestNamedObjectSmall> pSmall)
{
	miX = iX;
	miY = iY;
	mNamedTest1.Init(iName1);
	mNamedTest2.Init(iName2);
	mpObject = pObject;
	mpSmall = pSmall;
	mpvUnmanaged = NULL;
	miUnmagedSize = 0;
	return this;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestNamedObjectWithEmbedded::Class(void)
{
	CObject::Class();
	Pointer(mpObject.This());
	Pointer(mpSmall.This());
	Embedded(&mNamedTest1);
	Embedded(&mNamedTest2);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestNamedObjectWithEmbedded::Free(void)
{
	SafeFree(mpvUnmanaged);
	miUnmagedSize = 0;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestNamedObjectWithEmbedded::Save(CObjectSerialiser* pcFile)
{
	ReturnOnFalse(pcFile->WritePointer(mpObject));
	ReturnOnFalse(pcFile->WritePointer(mpSmall));
	ReturnOnFalse(mNamedTest1.Save(pcFile));
	ReturnOnFalse(mNamedTest2.Save(pcFile));
	ReturnOnFalse(pcFile->WriteInt(miX));
	ReturnOnFalse(pcFile->WriteInt(miY));
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestNamedObjectWithEmbedded::Load(CObjectDeserialiser* pcFile)
{
	ReturnOnFalse(pcFile->ReadPointer(mpObject.This()));
	ReturnOnFalse(pcFile->ReadPointer(mpSmall.This()));
	ReturnOnFalse(mNamedTest1.Load(pcFile));
	ReturnOnFalse(mNamedTest2.Load(pcFile));
	ReturnOnFalse(pcFile->ReadInt(&miX));
	ReturnOnFalse(pcFile->ReadInt(&miY));
	return TRUE;
}


