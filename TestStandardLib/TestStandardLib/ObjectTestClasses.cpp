#include "StandardLib/ObjectSerialiser.h"
#include "StandardLib/ObjectDeserialiser.h"
#include "ObjectTestClasses.h"


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestObject::Init(void)
{
	Init(NULL);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestObject::Init(CPointer pObject, Ptr<CTestObject> pTest)
{
	Init(NULL);
	mpObject = pObject;
	mpTest = pTest;
}



//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestObject::Init(STestObjectFreedNotifier* psKilledNotifier)
{
	PreInit();
	mpsFreedNotifier = psKilledNotifier;
	mi = 0x07070707;
	if (mpsFreedNotifier)
	{
		mpsFreedNotifier->bFreed= FALSE;
	}

	PostInit();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestObject::Class(void)
{
	CObject::Class();
	Pointer(mpObject.This());
	Pointer(mpTest.This());
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestObject::Free(void)
{
	if (mpsFreedNotifier)
	{
		mpsFreedNotifier->bFreed = TRUE;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestObject::Save(CObjectSerialiser* pcFile)
{
	ReturnOnFalse(pcFile->WritePointer(mpObject));
	ReturnOnFalse(pcFile->WritePointer(mpTest));
	ReturnOnFalse(pcFile->WriteInt(mi));
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestObject::Load(CObjectDeserialiser* pcFile)
{
	ReturnOnFalse(pcFile->ReadPointer(mpObject.This()));
	ReturnOnFalse(pcFile->ReadPointer(mpTest.This()));
	ReturnOnFalse(pcFile->ReadInt(&mi));
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestObject::SomeMethod(void)
{
	mi = 0x90909090;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestTriPointerObject::Init(void)
{
	Init(NULL);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestTriPointerObject::Init(STestObjectFreedNotifier* psKilledNotifier)
{
	PreInit();
	mpsFreedNotifier = psKilledNotifier;
	if (mpsFreedNotifier)
	{
		mpsFreedNotifier->bFreed = FALSE;
	}
	PostInit();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestTriPointerObject::Class(void)
{
	CObject::Class();
	Pointer(mpObject1.This());
	Pointer(mpObject2.This());
	Pointer(mpObject3.This());
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestTriPointerObject::Free(void)
{
	if (mpsFreedNotifier)
	{
		mpsFreedNotifier->bFreed = TRUE;
	}
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestTriPointerObject::Save(CObjectSerialiser* pcFile)
{
	ReturnOnFalse(pcFile->WritePointer(mpObject1));
	ReturnOnFalse(pcFile->WritePointer(mpObject2));
	ReturnOnFalse(pcFile->WritePointer(mpObject3));
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestTriPointerObject::Load(CObjectDeserialiser* pcFile)
{
	ReturnOnFalse(pcFile->ReadPointer(mpObject1.This()));
	ReturnOnFalse(pcFile->ReadPointer(mpObject2.This()));
	ReturnOnFalse(pcFile->ReadPointer(mpObject3.This()));
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestSaveableObject1::Init(void)
{
	PreInit();
	miInt = 7;
	mszString.Init();
	mbSaved = FALSE;

	PostInit();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestSaveableObject1::Class(void)
{
	CObject::Class();
	Pointer(mpObject.This());
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestSaveableObject1::Free(void)
{
	mszString.Kill();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestSaveableObject1::Save(CObjectSerialiser* pcFile)
{
	ReturnOnFalse(pcFile->WritePointer(mpObject));
	ReturnOnFalse(pcFile->WriteInt(miInt));
	ReturnOnFalse(mszString.WriteString(pcFile));

	mbSaved = TRUE;
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestSaveableObject1::Load(CObjectDeserialiser* pcFile)
{
	ReturnOnFalse(pcFile->ReadPointer(mpObject.This()));
	ReturnOnFalse(pcFile->ReadInt(&miInt));
	ReturnOnFalse(mszString.ReadString(pcFile));

	mbSaved = FALSE;
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestSaveableObject2::Init(const char* psz)
{
	PreInit();
	msz.Init(psz);
	mbSaved = FALSE;
	PostInit();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestSaveableObject2::Class(void)
{
	CObject::Class();
	Pointer(mp1.This());
	Pointer(mp2.This());
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestSaveableObject2::Free(void)
{
	msz.Kill();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestSaveableObject2::Save(CObjectSerialiser* pcFile)
{
	pcFile->WritePointer(mp1);
	pcFile->WritePointer(mp2);
	msz.WriteString(pcFile);
	mbSaved = TRUE;
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestSaveableObject2::Load(CObjectDeserialiser* pcFile)
{
	pcFile->ReadPointer(mp1.This());
	pcFile->ReadPointer(mp2.This());
	msz.ReadString(pcFile);
	mbSaved = FALSE;
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestObjectWithFields::Init(void)
{
	PreInit();

	mpsz = NULL;

	PostInit();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestObjectWithFields::Init(CPointer pObject, Ptr<CTestObject> pTest)
{
	Init();
	mpObject = pObject;
	mpTest = pTest;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestObjectWithFields::Class(void)
{
	CObject::Class();
	Pointer(mpTest.This());
	Pointer(mpObject.This());

	Primitive(&mi32);
	Primitive(&mi8);
	Primitive(&mui8);
	Primitive(&mui32);
	Primitive(&mi16);
	Primitive(&mui16);
	Primitive(&mc8);
	Primitive(&mc16);
	Primitive(&mf32);
	Primitive(&mf64);
	Primitive(&mi64);
	Primitive(&mui64);
	Primitive(&mb);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestObjectWithFields::Free(void)
{
	SafeFree(mpsz);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestObjectWithFields::Save(CObjectSerialiser* pcFile)
{
	ReturnOnFalse(pcFile->WritePointer(mpObject));
	ReturnOnFalse(pcFile->WritePointer(mpTest));

	ReturnOnFalse(pcFile->WriteInt(mi32));
	ReturnOnFalse(pcFile->WriteChar(mi8));
	ReturnOnFalse(pcFile->WriteChar(mui8));
	ReturnOnFalse(pcFile->WriteInt(mui32));
	ReturnOnFalse(pcFile->WriteShort(mi16));
	ReturnOnFalse(pcFile->WriteShort(mui16));
	ReturnOnFalse(pcFile->WriteChar(mc8));
	ReturnOnFalse(pcFile->WriteWChar(mc16));
	ReturnOnFalse(pcFile->WriteFloat(mf32));
	ReturnOnFalse(pcFile->WriteDouble(mf64));
	ReturnOnFalse(pcFile->WriteLong(mi64));
	ReturnOnFalse(pcFile->WriteLong(mui64));
	ReturnOnFalse(pcFile->WriteBool(mb));
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestObjectWithFields::Load(CObjectDeserialiser* pcFile)
{
	ReturnOnFalse(pcFile->ReadPointer(mpObject.This()));
	ReturnOnFalse(pcFile->ReadPointer(mpTest.This()));

	ReturnOnFalse(pcFile->ReadInt(mi32.GetPrimitivePointer()));
	ReturnOnFalse(pcFile->ReadChar(mi8.GetPrimitivePointer()));
	ReturnOnFalse(pcFile->ReadChar(mui8.GetPrimitivePointer()));
	ReturnOnFalse(pcFile->ReadInt(mui32.GetPrimitivePointer()));
	ReturnOnFalse(pcFile->ReadShort(mi16.GetPrimitivePointer()));
	ReturnOnFalse(pcFile->ReadShort(mui16.GetPrimitivePointer()));
	ReturnOnFalse(pcFile->ReadChar(mc8.GetPrimitivePointer()));
	ReturnOnFalse(pcFile->ReadWChar(mc16.GetPrimitivePointer()));
	ReturnOnFalse(pcFile->ReadFloat(mf32.GetPrimitivePointer()));
	ReturnOnFalse(pcFile->ReadDouble(mf64.GetPrimitivePointer()));
	ReturnOnFalse(pcFile->ReadLong(mi64.GetPrimitivePointer()));
	ReturnOnFalse(pcFile->ReadLong(mui64.GetPrimitivePointer()));
	ReturnOnFalse(pcFile->ReadBool(mb.GetPrimitivePointer()));
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestObjectWithFields::Update(int8 i8)
{
	mi8 = i8;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestObjectWithFields::Update(char* sz)
{
	mpsz = sz;
	SetDirty(TRUE);
}




//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestEmbeddedObjectWithFields::Init(void)
{
	PreInit();
	PostInit();
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestEmbeddedObjectWithFields::Class(void)
{
	CObject::Class();

	Primitive(&mbX);
	Pointer(mpObjectA.This());
	Embedded(&mcEmbedded1);
	Pointer(mpObjectB.This());
	Embedded(&mcEmbedded2);
	Pointer(mpObjectC.This());
	Primitive(&mbY);
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
void CTestEmbeddedObjectWithFields::Free(void)
{
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestEmbeddedObjectWithFields::Save(CObjectSerialiser* pcFile)
{
	ReturnOnFalse(pcFile->WriteBool(mbX));
	ReturnOnFalse(pcFile->WritePointer(mpObjectA));
	ReturnOnFalse(mcEmbedded1.Save(pcFile));
	ReturnOnFalse(pcFile->WritePointer(mpObjectB));
	ReturnOnFalse(mcEmbedded2.Save(pcFile));
	ReturnOnFalse(pcFile->WritePointer(mpObjectC));
	ReturnOnFalse(pcFile->WriteBool(mbY));
	return TRUE;
}


//////////////////////////////////////////////////////////////////////////
//
//
//////////////////////////////////////////////////////////////////////////
BOOL CTestEmbeddedObjectWithFields::Load(CObjectDeserialiser* pcFile)
{
	ReturnOnFalse(pcFile->ReadBool(mbX.GetPrimitivePointer()));
	ReturnOnFalse(pcFile->ReadPointer(mpObjectA.This()));
	ReturnOnFalse(mcEmbedded1.Load(pcFile));
	ReturnOnFalse(pcFile->ReadPointer(mpObjectB.This()));
	ReturnOnFalse(mcEmbedded2.Load(pcFile));
	ReturnOnFalse(pcFile->ReadPointer(mpObjectC.This()));
	ReturnOnFalse(pcFile->ReadBool(mbY.GetPrimitivePointer()));
	return TRUE;
}

